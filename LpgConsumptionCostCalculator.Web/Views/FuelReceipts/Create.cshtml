@model LpgConsumptionCostCalculator.Web.ViewModels.FuelReceiptViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <form>
        <!-- Page Heading -->
        <h1 class="h3 mb-2 text-gray-800">Create new fuel receipt</h1>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!-- Row -->
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="form-group row align-items-center">
                            <div class="col-sm-12 col-md-12 col-xl-4 col-lg-4 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.RefuelingDate, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.RefuelingDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.RefuelingDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-xl-6 col-lg-6 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.PetrolStationName, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.PetrolStationName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PetrolStationName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-xl-2 col-lg-2 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.FuelType, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EnumDropDownListFor(model => model.FuelType, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FuelType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Row -->
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="form-group row align-items-center">
                            <div class="col-sm-12 col-md-12 col-xl-4 col-lg-4 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.FuelPrice, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FuelPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FuelPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-xl-4 col-lg-4 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.FuelAmount, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FuelAmount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FuelAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-xl-4 col-lg-4 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.DistanceFromLastRefueling, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.DistanceFromLastRefueling, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DistanceFromLastRefueling, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Row -->
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="form-group row align-items-center">
                            <div class="col-sm-12 col-md-12 col-xl-11 col-lg-11 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", placeholder = "optional" } })
                                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-xl-1 col-lg-1 mb-3 mb-sm-0">
                                @Html.LabelFor(model => model.FueledCarId, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FueledCarId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.CarID, @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.FueledCarId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Action buttons -->
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="text-center">
                            <input type="submit" value="Create" style="width: 120px" class="btn btn-outline-dark btn-sm" />
                            @Html.ActionLink("Back to List", "Index", new { id = ViewBag.CarId }, new { @class = "btn btn-outline-dark btn-sm", @style = "width: 120px" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                showAnim: "slideDown",
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-50:+0"
            });

        });
    </script>

}
